name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest httpx
        
    - name: Run tests
      run: |
        python -m pytest tests/ -v

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        envs: DATABASE_URL
        script: |
          echo "🚀 Starting deployment..."
          
          # Navigate to project directory
          cd sentiment-analysis-api || exit 1
          
          # Pull latest changes
          echo "📥 Pulling latest code..."
          git pull origin main
          
          # Activate virtual environment
          echo "🔧 Setting up environment..."
          source ../sentiment_env/bin/activate
          
          # Install/update dependencies
          echo "📦 Installing dependencies..."
          pip install -r requirements.txt
          
          # Stop existing application
          echo "🛑 Stopping existing application..."
          sudo pkill -f "python main.py" || true
          
          # Wait a moment for graceful shutdown
          sleep 5
          
          # Start new application with proper environment
          echo "🚀 Starting new application..."
          export DATABASE_URL="${{ secrets.DATABASE_URL }}"
          source ../sentiment_env/bin/activate
          nohup bash -c 'export DATABASE_URL="${{ secrets.DATABASE_URL }}"; source ../sentiment_env/bin/activate; python main.py' > api.log 2>&1 &
          
          # Wait for application to start
          echo "⏳ Waiting for application to start..."
          sleep 45
          
          # Test that application is healthy
          echo "🔍 Testing application health..."
          curl -f http://localhost:8000/health || exit 1
          
          # Test sentiment analysis endpoint
          echo "🧪 Testing sentiment analysis..."
          curl -X POST "http://localhost:8000/analyze" \
               -H "Content-Type: application/json" \
               -d '{"text": "Deployment successful!"}' || exit 1
          
          echo "✅ Deployment completed successfully!"
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        
    - name: Deployment Success Notification
      if: success()
      run: |
        echo "✅ Deployment to production completed successfully!"
        echo "🔗 API is running at: http://${{ secrets.EC2_HOST }}:8000"
        
    - name: Deployment Failure Notification
      if: failure()
      run: |
        echo "❌ Deployment failed! Check the logs above."
        exit 1
